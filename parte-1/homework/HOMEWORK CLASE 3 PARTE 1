-- Respuesta pregunta 1 clase 3
select nombre, codigo_producto, categoria,
case when color is null then 'unknown' else color end as colorf
from stg.product_master
where nombre like '%PHILIPS%' or nombre like '%Samsung%' or nombre like '%SAMSUNG%' -- sin LOWER/UPPER

select nombre, codigo_producto, categoria,
case when color is null then 'unknown' else color end as colorf
from stg.product_master
where lower(nombre) like '%philips%' or lower(nombre) like '%samsung%' -- con LOWER

-- Respuesta pregunta 2 clase 3
select ols.tienda, sm.pais, sm.provincia, sum(ols.venta) as ventas, sum(ols.impuestos) as impuesto, ols.moneda
from stg.order_line_sale ols
left join stg.store_master sm on sm.codigo_tienda = ols.tienda
group by ols.tienda, sm.pais, sm.provincia, ols.moneda
order by tienda 

-- Respuesta pregunta 3 clase 3 {Nota: En este ejercicio intenté la cláusula SUM como SUM(A)+SUM(B) e igual me arrojó valores NULL, por lo tanto apliqué COALESCE}

select ols.producto, pm.subcategoria, sum(ols.venta)+sum(coalesce(ols.descuento, 0))-sum(coalesce(ols.impuestos, 0))+sum(coalesce(ols.creditos, 0)) as venta_total, ols.moneda
from stg.order_line_sale ols
left join stg.product_master pm on pm.codigo_producto = ols.producto
group by ols.producto, pm.subcategoria, ols.moneda
order by subcategoria, moneda

-- Respuesta pregunta 4 clase 3
select sm.pais || ' - ' || sm.provincia as concatenacion, ols.producto, pm.subcategoria, sum(ols.cantidad) as unidades_vendidas
from stg.order_line_sale ols
left join stg.store_master sm on sm.codigo_tienda = ols.tienda
left join stg.product_master pm on ols.producto = pm.codigo_producto
group by sm.pais || ' - ' || sm.provincia,  ols.producto, pm.subcategoria
order by 1 -- filtrado por producto - categoria

select sm.pais || ' - ' || sm.provincia as concatenacion, pm.subcategoria, sum(ols.cantidad) as unidades_vendidas
from stg.order_line_sale ols
left join stg.store_master sm on sm.codigo_tienda = ols.tienda
left join stg.product_master pm on ols.producto = pm.codigo_producto
where ols.producto is not null
group by sm.pais || ' - ' || sm.provincia, pm.subcategoria
order by 1 -- filtrado por categoria

-- Respuesta pregunta 5 clase 3
create view stg.super_store as
select sm.nombre as nombre_tienda, sm.fecha_apertura, sum(ssc.conteo) as entradas_desde_apertura
from stg.store_master sm
left join stg.super_store_count ssc on sm.codigo_tienda = ssc.tienda
where to_date(ssc.fecha, 'YYYY-MM-DD') >= sm.fecha_apertura
group by sm.nombre, sm.fecha_apertura

-- Respuesta pregunta 6 clase 3
select 
	i.sku,
	i.tienda,
	sm.nombre,
	extract(month from i.fecha) as mes,
	avg(inicial+final)/2 as inventario_promedio
from 
	stg.store_master sm
left join 
	stg.inventory i 
	on 
		sm.codigo_tienda = i.tienda
group by 
	1,2,3,4
order by 1 -- este lo hice con la formula que nos mostraste en clases (arroja valores con decimales)

select 
	i.sku,
	i.tienda,
	sm.nombre,
	extract(month from i.fecha) as mes,
	(sum(inicial+final)/2)/count(*) as inventario_promedio
from 
	stg.store_master sm
left join 
	stg.inventory i 
	on 
		sm.codigo_tienda = i.tienda
group by 
	1,2,3,4
order by 1 -- este lo hice con un sum/count utilizando count(*) para dividirlo por el total de registros correspondientes al filtro y arroja valores sin decimales

-- Respuesta pregunta 7 clase 3
-- Este lo pude hacer sin CTE ya que me di cuenta que no siendo CASE una función de agregación, permite agrupar por ésta.
select sum(ols.cantidad) as unidades_vendidas, 
	case 
		when pm.material is null then 'Unknown'
		when pm.material = 'PLASTICO' or pm.material = 'plastico' then 'Plastico' 
		else material 
	end as material_pdto
from stg.order_line_sale ols
left join stg.product_master pm on ols.producto = pm.codigo_producto
group by material_pdto

-- Este es el mismo ejercicio pero lo hice con CTE
with order_sale as (
select ols.*, 
	case 
		when pm.material is null then 'Unknown'
		when pm.material = 'PLASTICO' or pm.material = 'plastico' then 'Plastico' 
		else material 
	end as material_pdto
from stg.order_line_sale ols
left join stg.product_master pm on ols.producto = pm.codigo_producto
)
select material_pdto, sum(cantidad)
from order_sale
group by material_pdto

-- Respuesta pregunta 8 clase 3
with coste_usd as (
select *, 
	case 
		when ols.moneda = 'ARS' then ols.venta/fx.cotizacion_usd_peso
		when ols.moneda = 'URU' then ols.venta/fx.cotizacion_usd_uru
		when ols.moneda = 'EUR' then ols.venta/fx.cotizacion_usd_eur
	end as venta_bruta_usd
from stg.order_line_sale ols
left join stg.monthly_average_fx_rate fx on fx.mes = date(date_trunc('month', ols.fecha))
)
select * from coste_usd as cu
order by cu.orden, cu.producto

-- Respuesta pregunta 9 clase 3
with ols_to_usd as (
select *,
	case 
		when ols.moneda = 'ARS' then ols.venta/fx.cotizacion_usd_peso
		when ols.moneda = 'URU' then ols.venta/fx.cotizacion_usd_uru
		when ols.moneda = 'EUR' then ols.venta/fx.cotizacion_usd_eur
	end as venta_bruta_usd,
	case 
		when ols.moneda = 'ARS' then coalesce(ols.descuento, 0)/fx.cotizacion_usd_peso
		when ols.moneda = 'URU' then coalesce(ols.descuento, 0)/fx.cotizacion_usd_uru
		when ols.moneda = 'EUR' then coalesce(ols.descuento, 0)/fx.cotizacion_usd_eur
	end as descuentos_usd,
	case 
		when ols.moneda = 'ARS' then ols.impuestos/fx.cotizacion_usd_peso
		when ols.moneda = 'URU' then ols.impuestos/fx.cotizacion_usd_uru
		when ols.moneda = 'EUR' then ols.impuestos/fx.cotizacion_usd_eur
	end as impuestos_usd,
	case 
		when ols.moneda = 'ARS' then coalesce(ols.creditos, 0)/fx.cotizacion_usd_peso
		when ols.moneda = 'URU' then coalesce(ols.creditos, 0)/fx.cotizacion_usd_uru
		when ols.moneda = 'EUR' then coalesce(ols.creditos, 0)/fx.cotizacion_usd_eur
	end as creditos_usd
from stg.order_line_sale ols
left join stg.monthly_average_fx_rate fx on fx.mes = date(date_trunc('month', ols.fecha))
)
select sum((otu.venta_bruta_usd)+(otu.descuentos_usd)-(otu.impuestos_usd)-(otu.creditos_usd)) as Venta_empresa_usd
from ols_to_usd as otu

-- Respuesta pregunta 10 clase 3
with revenues_usd as (
select ols.*, c.costo_promedio_usd as costo_usd,
	case
		when ols.moneda = 'ARS' then fx.cotizacion_usd_peso
		when ols.moneda = 'URU' then fx.cotizacion_usd_uru
		when ols.moneda = 'EUR' then fx.cotizacion_usd_eur
	end as conversion_usd
from stg.order_line_sale ols
left join stg.cost c on ols.producto = c.codigo_producto
left join stg.monthly_average_fx_rate fx on fx.mes = date(date_trunc('month', ols.fecha))
)
select *, ((venta/conversion_usd)+(coalesce(descuento, 0)/conversion_usd))-costo_usd as margen_venta_usd
from revenues_usd

-- Respuesta pregunta 11 clase 3
select ols.orden, pm.subsubcategoria, sum(ols.cantidad) as cantidad_items
from stg.order_line_sale ols
left join stg.product_master pm on pm.codigo_producto = ols.producto
group by 1, 2
order by 1
